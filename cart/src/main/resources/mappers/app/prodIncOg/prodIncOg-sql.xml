<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="prodIncOgMapper">
	<sql id="where-prodIncOg">
		WHERE 1=1
			<if test="prodId != null and prodId != '' ">
			AND PIO.PROD_ID = #{prodId}
			</if>
			<if test="prodIncOgDtm != null and prodIncOgDtm != '' ">
			AND PIO.PROD_INC_OG_DTM = STR_TO_DATE(#{prodIncOgDtm}, '%Y%m%d %h%i%s')
			</if>
			<if test="incOgDivCd != null and incOgDivCd != '' ">
			AND PIO.INC_OG_DIV_CD = #{incOgDivCd}
			</if>
			<if test="prodIncQty != null and prodIncQty != '' ">
			AND PIO.PROD_INC_QTY = #{prodIncQty}
			</if>
			<if test="prodOgQty != null and prodOgQty != '' ">
			AND PIO.PROD_OG_QTY = #{prodOgQty}
			</if>
	</sql>

	<select id="getProdIncOgListCount" parameterType="ProdIncOgExDto" resultType="Integer">
	/* prodIncOgMapper.getProdIncOgListCount */
		SELECT COUNT(1) AS CNT
		FROM CW_PROD_INC_OG PIO
		<include refid="where-prodIncOg" />
	</select>

	<select id="getProdIncOgList" parameterType="ProdIncOgExDto" resultType="ProdIncOgExDto">
	/* prodIncOgMapper.getProdIncOgList */
		<include refid="commonMapper.pagingPrefix"/>
		SELECT
			PIO.PROD_ID
			,PROD_INC_OG_DTM
			,PIO.INC_OG_DIV_CD
			,PIO.PROD_INC_QTY
			,PIO.PROD_OG_QTY
			,PIO.REG_USER_ID
			,REG_DTM
			,PIO.UPD_USER_ID
			,UPD_DTM
		FROM CW_PROD_INC_OG PIO
		<include refid="where-prodIncOg" />
		ORDER BY
			PIO.PROD_ID
			,PIO.PROD_INC_OG_DTM
		<include refid="commonMapper.pagingPostfix"/>
	</select>

	<select id="getProdIncOg" parameterType="ProdIncOgExDto" resultType="ProdIncOgExDto">
	/* prodIncOgMapper.getProdIncOg */
		SELECT
			PIO.PROD_ID
			,PROD_INC_OG_DTM
			,PIO.INC_OG_DIV_CD
			,PIO.PROD_INC_QTY
			,PIO.PROD_OG_QTY
			,PIO.REG_USER_ID
			,REG_DTM
			,PIO.UPD_USER_ID
			,UPD_DTM
		FROM CW_PROD_INC_OG PIO
		WHERE
			PIO.PROD_ID = #{prodId}
			AND PIO.PROD_INC_OG_DTM = #{prodIncOgDtm}
	</select>

	<insert id="insertProdIncOg" parameterType="ProdIncOgExDto">
	/* prodIncOgMapper.insertProdIncOg */
		INSERT INTO CW_PROD_INC_OG (
			PROD_ID
			,PROD_INC_OG_DTM
			,INC_OG_DIV_CD
			,PROD_INC_QTY
			,PROD_OG_QTY
			,REG_USER_ID
			,REG_DTM
			,UPD_USER_ID
			,UPD_DTM
		) VALUES (
			#{prodId}
			,STR_TO_DATE(#{prodIncOgDtm}, '%Y%m%d %h%i%s')
			,#{incOgDivCd}
			,#{prodIncQty}
			,#{prodOgQty}
			,#{regUserId}
			,NOW()
			,#{updUserId}
			,NOW()
		)
	</insert>

	<update id="updateProdIncOg" parameterType="ProdIncOgExDto">
	/* prodIncOgMapper.updateProdIncOg */
		UPDATE CW_PROD_INC_OG
		<set>
		<if test="incOgDivCd != null">
		INC_OG_DIV_CD = #{incOgDivCd},
		</if>
		<if test="prodIncQty != null">
		PROD_INC_QTY = #{prodIncQty},
		</if>
		<if test="prodOgQty != null">
		PROD_OG_QTY = #{prodOgQty},
		</if>
		<if test="updUserId != null">
		UPD_USER_ID = #{updUserId},
		</if>
		<if test="updDtm != null">
		UPD_DTM = NOW(),
		</if>
		</set>
		WHERE
			PROD_ID = #{prodId}
			AND PROD_INC_OG_DTM = #{prodIncOgDtm}
	</update>

	<delete id="deleteProdIncOg" parameterType="ProdIncOgExDto">
	/* prodIncOgMapper.deleteProdIncOg */
	DELETE FROM CW_PROD_INC_OG
	WHERE
		PROD_ID = #{prodId}
		AND PROD_INC_OG_DTM = #{prodIncOgDtm}
	</delete>
</mapper>
